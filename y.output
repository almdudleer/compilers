Terminals unused in grammar

    EOL


State 37 conflicts: 7 shift/reduce
State 50 conflicts: 1 shift/reduce


Grammar

    0 $accept: root $end

    1 root: %empty
    2     | VAR symlist composite
    3     | composite

    4 symlist: NAME
    5        | NAME ',' symlist

    6 list: %empty
    7     | stmt
    8     | stmt SEP list

    9 stmt: NAME ASN exp
   10     | IF '(' exp ')' stmt
   11     | IF '(' exp ')' stmt ELSE stmt
   12     | EXIT exp
   13     | composite
   14     | exp

   15 composite: BEG list END

   16 exp: exp CMP exp
   17    | exp '+' exp
   18    | exp '-' exp
   19    | exp '*' exp
   20    | exp '/' exp
   21    | '(' exp ')'
   22    | '-' exp
   23    | NUM
   24    | NAME
   25    | NAME '=' exp
   26    | exp BITR exp
   27    | exp BITL exp


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 11 21
    ')' (41) 10 11 21
    '*' (42) 19
    '+' (43) 17
    ',' (44) 5
    '-' (45) 18 22
    '/' (47) 20
    '=' (61) 25
    error (256)
    NUM <d> (258) 23
    NAME <s> (259) 4 5 9 24 25
    BITR (260) 26
    BITL (261) 27
    IF (262) 10 11
    ELSE (263) 11
    BEG (264) 15
    END (265) 15
    VAR (266) 2
    CMP <fn> (267) 16
    ASN (268) 9
    EOL (269)
    SEP (270) 8
    EXIT (271) 12
    UMINUS (272)


Nonterminals, with rules where they appear

    $accept (26)
        on left: 0
    root (27)
        on left: 1 2 3
        on right: 0
    symlist <sl> (28)
        on left: 4 5
        on right: 2 5
    list <a> (29)
        on left: 6 7 8
        on right: 8 15
    stmt <a> (30)
        on left: 9 10 11 12 13 14
        on right: 7 8 10 11
    composite <a> (31)
        on left: 15
        on right: 2 3 13
    exp <a> (32)
        on left: 16 17 18 19 20 21 22 23 24 25 26 27
        on right: 9 10 11 12 14 16 17 18 19 20 21 22 25 26 27


State 0

    0 $accept: . root $end

    BEG  shift, and go to state 1
    VAR  shift, and go to state 2

    $default  reduce using rule 1 (root)

    root       go to state 3
    composite  go to state 4


State 1

   15 composite: BEG . list END

    NUM   shift, and go to state 5
    NAME  shift, and go to state 6
    IF    shift, and go to state 7
    BEG   shift, and go to state 1
    EXIT  shift, and go to state 8
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    $default  reduce using rule 6 (list)

    list       go to state 11
    stmt       go to state 12
    composite  go to state 13
    exp        go to state 14


State 2

    2 root: VAR . symlist composite

    NAME  shift, and go to state 15

    symlist  go to state 16


State 3

    0 $accept: root . $end

    $end  shift, and go to state 17


State 4

    3 root: composite .

    $default  reduce using rule 3 (root)


State 5

   23 exp: NUM .

    $default  reduce using rule 23 (exp)


State 6

    9 stmt: NAME . ASN exp
   24 exp: NAME .
   25    | NAME . '=' exp

    ASN  shift, and go to state 18
    '='  shift, and go to state 19

    $default  reduce using rule 24 (exp)


State 7

   10 stmt: IF . '(' exp ')' stmt
   11     | IF . '(' exp ')' stmt ELSE stmt

    '('  shift, and go to state 20


State 8

   12 stmt: EXIT . exp

    NUM   shift, and go to state 5
    NAME  shift, and go to state 21
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    exp  go to state 22


State 9

   22 exp: '-' . exp

    NUM   shift, and go to state 5
    NAME  shift, and go to state 21
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    exp  go to state 23


State 10

   21 exp: '(' . exp ')'

    NUM   shift, and go to state 5
    NAME  shift, and go to state 21
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    exp  go to state 24


State 11

   15 composite: BEG list . END

    END  shift, and go to state 25


State 12

    7 list: stmt .
    8     | stmt . SEP list

    SEP  shift, and go to state 26

    $default  reduce using rule 7 (list)


State 13

   13 stmt: composite .

    $default  reduce using rule 13 (stmt)


State 14

   14 stmt: exp .
   16 exp: exp . CMP exp
   17    | exp . '+' exp
   18    | exp . '-' exp
   19    | exp . '*' exp
   20    | exp . '/' exp
   26    | exp . BITR exp
   27    | exp . BITL exp

    BITR  shift, and go to state 27
    BITL  shift, and go to state 28
    CMP   shift, and go to state 29
    '+'   shift, and go to state 30
    '-'   shift, and go to state 31
    '*'   shift, and go to state 32
    '/'   shift, and go to state 33

    $default  reduce using rule 14 (stmt)


State 15

    4 symlist: NAME .
    5        | NAME . ',' symlist

    ','  shift, and go to state 34

    $default  reduce using rule 4 (symlist)


State 16

    2 root: VAR symlist . composite

    BEG  shift, and go to state 1

    composite  go to state 35


State 17

    0 $accept: root $end .

    $default  accept


State 18

    9 stmt: NAME ASN . exp

    NUM   shift, and go to state 5
    NAME  shift, and go to state 21
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    exp  go to state 36


State 19

   25 exp: NAME '=' . exp

    NUM   shift, and go to state 5
    NAME  shift, and go to state 21
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    exp  go to state 37


State 20

   10 stmt: IF '(' . exp ')' stmt
   11     | IF '(' . exp ')' stmt ELSE stmt

    NUM   shift, and go to state 5
    NAME  shift, and go to state 21
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    exp  go to state 38


State 21

   24 exp: NAME .
   25    | NAME . '=' exp

    '='  shift, and go to state 19

    $default  reduce using rule 24 (exp)


State 22

   12 stmt: EXIT exp .
   16 exp: exp . CMP exp
   17    | exp . '+' exp
   18    | exp . '-' exp
   19    | exp . '*' exp
   20    | exp . '/' exp
   26    | exp . BITR exp
   27    | exp . BITL exp

    BITR  shift, and go to state 27
    BITL  shift, and go to state 28
    CMP   shift, and go to state 29
    '+'   shift, and go to state 30
    '-'   shift, and go to state 31
    '*'   shift, and go to state 32
    '/'   shift, and go to state 33

    $default  reduce using rule 12 (stmt)


State 23

   16 exp: exp . CMP exp
   17    | exp . '+' exp
   18    | exp . '-' exp
   19    | exp . '*' exp
   20    | exp . '/' exp
   22    | '-' exp .
   26    | exp . BITR exp
   27    | exp . BITL exp

    $default  reduce using rule 22 (exp)


State 24

   16 exp: exp . CMP exp
   17    | exp . '+' exp
   18    | exp . '-' exp
   19    | exp . '*' exp
   20    | exp . '/' exp
   21    | '(' exp . ')'
   26    | exp . BITR exp
   27    | exp . BITL exp

    BITR  shift, and go to state 27
    BITL  shift, and go to state 28
    CMP   shift, and go to state 29
    '+'   shift, and go to state 30
    '-'   shift, and go to state 31
    '*'   shift, and go to state 32
    '/'   shift, and go to state 33
    ')'   shift, and go to state 39


State 25

   15 composite: BEG list END .

    $default  reduce using rule 15 (composite)


State 26

    8 list: stmt SEP . list

    NUM   shift, and go to state 5
    NAME  shift, and go to state 6
    IF    shift, and go to state 7
    BEG   shift, and go to state 1
    EXIT  shift, and go to state 8
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    $default  reduce using rule 6 (list)

    list       go to state 40
    stmt       go to state 12
    composite  go to state 13
    exp        go to state 14


State 27

   26 exp: exp BITR . exp

    NUM   shift, and go to state 5
    NAME  shift, and go to state 21
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    exp  go to state 41


State 28

   27 exp: exp BITL . exp

    NUM   shift, and go to state 5
    NAME  shift, and go to state 21
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    exp  go to state 42


State 29

   16 exp: exp CMP . exp

    NUM   shift, and go to state 5
    NAME  shift, and go to state 21
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    exp  go to state 43


State 30

   17 exp: exp '+' . exp

    NUM   shift, and go to state 5
    NAME  shift, and go to state 21
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    exp  go to state 44


State 31

   18 exp: exp '-' . exp

    NUM   shift, and go to state 5
    NAME  shift, and go to state 21
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    exp  go to state 45


State 32

   19 exp: exp '*' . exp

    NUM   shift, and go to state 5
    NAME  shift, and go to state 21
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    exp  go to state 46


State 33

   20 exp: exp '/' . exp

    NUM   shift, and go to state 5
    NAME  shift, and go to state 21
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    exp  go to state 47


State 34

    5 symlist: NAME ',' . symlist

    NAME  shift, and go to state 15

    symlist  go to state 48


State 35

    2 root: VAR symlist composite .

    $default  reduce using rule 2 (root)


State 36

    9 stmt: NAME ASN exp .
   16 exp: exp . CMP exp
   17    | exp . '+' exp
   18    | exp . '-' exp
   19    | exp . '*' exp
   20    | exp . '/' exp
   26    | exp . BITR exp
   27    | exp . BITL exp

    BITR  shift, and go to state 27
    BITL  shift, and go to state 28
    CMP   shift, and go to state 29
    '+'   shift, and go to state 30
    '-'   shift, and go to state 31
    '*'   shift, and go to state 32
    '/'   shift, and go to state 33

    $default  reduce using rule 9 (stmt)


State 37

   16 exp: exp . CMP exp
   17    | exp . '+' exp
   18    | exp . '-' exp
   19    | exp . '*' exp
   20    | exp . '/' exp
   25    | NAME '=' exp .
   26    | exp . BITR exp
   27    | exp . BITL exp

    BITR  shift, and go to state 27
    BITL  shift, and go to state 28
    CMP   shift, and go to state 29
    '+'   shift, and go to state 30
    '-'   shift, and go to state 31
    '*'   shift, and go to state 32
    '/'   shift, and go to state 33

    BITR      [reduce using rule 25 (exp)]
    BITL      [reduce using rule 25 (exp)]
    CMP       [reduce using rule 25 (exp)]
    '+'       [reduce using rule 25 (exp)]
    '-'       [reduce using rule 25 (exp)]
    '*'       [reduce using rule 25 (exp)]
    '/'       [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


State 38

   10 stmt: IF '(' exp . ')' stmt
   11     | IF '(' exp . ')' stmt ELSE stmt
   16 exp: exp . CMP exp
   17    | exp . '+' exp
   18    | exp . '-' exp
   19    | exp . '*' exp
   20    | exp . '/' exp
   26    | exp . BITR exp
   27    | exp . BITL exp

    BITR  shift, and go to state 27
    BITL  shift, and go to state 28
    CMP   shift, and go to state 29
    '+'   shift, and go to state 30
    '-'   shift, and go to state 31
    '*'   shift, and go to state 32
    '/'   shift, and go to state 33
    ')'   shift, and go to state 49


State 39

   21 exp: '(' exp ')' .

    $default  reduce using rule 21 (exp)


State 40

    8 list: stmt SEP list .

    $default  reduce using rule 8 (list)


State 41

   16 exp: exp . CMP exp
   17    | exp . '+' exp
   18    | exp . '-' exp
   19    | exp . '*' exp
   20    | exp . '/' exp
   26    | exp . BITR exp
   26    | exp BITR exp .
   27    | exp . BITL exp

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 26 (exp)


State 42

   16 exp: exp . CMP exp
   17    | exp . '+' exp
   18    | exp . '-' exp
   19    | exp . '*' exp
   20    | exp . '/' exp
   26    | exp . BITR exp
   27    | exp . BITL exp
   27    | exp BITL exp .

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 27 (exp)


State 43

   16 exp: exp . CMP exp
   16    | exp CMP exp .
   17    | exp . '+' exp
   18    | exp . '-' exp
   19    | exp . '*' exp
   20    | exp . '/' exp
   26    | exp . BITR exp
   27    | exp . BITL exp

    BITR  shift, and go to state 27
    BITL  shift, and go to state 28
    '+'   shift, and go to state 30
    '-'   shift, and go to state 31
    '*'   shift, and go to state 32
    '/'   shift, and go to state 33

    CMP  error (nonassociative)

    $default  reduce using rule 16 (exp)


State 44

   16 exp: exp . CMP exp
   17    | exp . '+' exp
   17    | exp '+' exp .
   18    | exp . '-' exp
   19    | exp . '*' exp
   20    | exp . '/' exp
   26    | exp . BITR exp
   27    | exp . BITL exp

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 17 (exp)


State 45

   16 exp: exp . CMP exp
   17    | exp . '+' exp
   18    | exp . '-' exp
   18    | exp '-' exp .
   19    | exp . '*' exp
   20    | exp . '/' exp
   26    | exp . BITR exp
   27    | exp . BITL exp

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 18 (exp)


State 46

   16 exp: exp . CMP exp
   17    | exp . '+' exp
   18    | exp . '-' exp
   19    | exp . '*' exp
   19    | exp '*' exp .
   20    | exp . '/' exp
   26    | exp . BITR exp
   27    | exp . BITL exp

    $default  reduce using rule 19 (exp)


State 47

   16 exp: exp . CMP exp
   17    | exp . '+' exp
   18    | exp . '-' exp
   19    | exp . '*' exp
   20    | exp . '/' exp
   20    | exp '/' exp .
   26    | exp . BITR exp
   27    | exp . BITL exp

    $default  reduce using rule 20 (exp)


State 48

    5 symlist: NAME ',' symlist .

    $default  reduce using rule 5 (symlist)


State 49

   10 stmt: IF '(' exp ')' . stmt
   11     | IF '(' exp ')' . stmt ELSE stmt

    NUM   shift, and go to state 5
    NAME  shift, and go to state 6
    IF    shift, and go to state 7
    BEG   shift, and go to state 1
    EXIT  shift, and go to state 8
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    stmt       go to state 50
    composite  go to state 13
    exp        go to state 14


State 50

   10 stmt: IF '(' exp ')' stmt .
   11     | IF '(' exp ')' stmt . ELSE stmt

    ELSE  shift, and go to state 51

    ELSE      [reduce using rule 10 (stmt)]
    $default  reduce using rule 10 (stmt)


State 51

   11 stmt: IF '(' exp ')' stmt ELSE . stmt

    NUM   shift, and go to state 5
    NAME  shift, and go to state 6
    IF    shift, and go to state 7
    BEG   shift, and go to state 1
    EXIT  shift, and go to state 8
    '-'   shift, and go to state 9
    '('   shift, and go to state 10

    stmt       go to state 52
    composite  go to state 13
    exp        go to state 14


State 52

   11 stmt: IF '(' exp ')' stmt ELSE stmt .

    $default  reduce using rule 11 (stmt)
